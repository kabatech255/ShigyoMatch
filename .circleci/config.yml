version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers

    working_directory: ~/repo
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  test:
    docker:
      - image: circleci/php:7.3-node-browsers
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USERNAME: 'root'
          MYSQL_PASSWORD: ''
          MYSQL_PORT: 3306

      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: shigyo
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: '%'

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: Install PHP-Extension
          command: |
            sudo apt update
            sudo docker-php-ext-install zip
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v2-dependencies-{{ checksum "laravel/composer.json" }}

      - run:
          name: Install Composer
          working_directory: laravel
          command: composer install -n --prefer-dist

      - save_cache:
          key: v2-dependencies-{{ checksum "laravel/composer.json" }}
          paths:
            - ./vendor

      - run:
          name: Setup SQLite
          working_directory: laravel
          command: |
            touch storage/testing.sqlite
            php artisan migrate --env=testing --database=sqlite_testing --force
      - run:
          name: Run PHPunit
          working_directory: laravel
          command: |
            echo $ENV_FILE | base64 --decode > .env
            vendor/bin/phpunit
      - run:
          name: Lint PHP
          working_directory: laravel
          command: |
            composer phpstan

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
